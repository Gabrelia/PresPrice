Gabriela Johnson
PresPrice Proposal

The social justice issue: I am attempting to address the expensiveness of purchasing medicine by creating an app that compares the prices of medicines across different pharmacies.

Project Title: PresPrice

Option Chosen: Option 2

App Chosen: I am choosing to create a web based app.  I will be creating it using Ruby on Rails and SQLite to hold my database of people’s saved prescription searches.  I will also be using the GoodRx API to access these prescription prices.

Project Idea: I want to create an app where people can compare medicine prices before purchasing so they can save money.  Access to healthcare is an expensive problem in our country especially for low income families, and it is necessary to be mindful of one's medical expenses. The app would work by having the user open the app then entering in their medicine in the search bar.  The name of the medicine would then be retrieved from the API and the pharmacies that have these medicines would have their prices displayed. The pharmacies displayed would be Walmart, CVS, Walgreens, Rite Aid and more. It is innovative because instead of users searching pharmacy websites for the prices of their medicine, this displays the prices all in one place so the user can make a quick decision.  I also want to be able to provide a generic alternative to the medicine if available, which would make the price even cheaper.  The goal is for the user to be able to decrease their spending by finding the cheapest option for their medicine purchases. This will address the social justice issue because it will support low income families by decreasing their medical spending.

Algorithm: I will be creating an algorithm that takes in the entered medicines the user needs to purchase, and find the pharmacy that has the lowest combined prices for them that are in the same store. The user would choose to search for multiple medicines then enter in 2 separate medicines into the search bar of the app. Then, by taking the prices of the first medicine from each pharmacy, and adding them to the prices of the second medication from each pharmacy, the lowest calculated sum of both prices within the same store would be the recommended match.  In other words, the two medicines would have their Walmart prices added together, their CVS prices added together, and so on.  Then the app would display the store to the user with the lowest combined price.  

Data Structure: I will be saving the user information to an SQL database.  For every user saved to a line, there will be a column that saves their username and password and saved stores and corresponding medicine so they will remember where to purchase their cheapest medicines individually.  On the backend each user will have an array with their saved searches that is created by iterating through the database of users.

New software engineering concepts you expect to learn or reinforce: I expect to learn more about Ruby on Rails and SQLite since I have used them before but never at this level.  I also do not have that much experience with APIs so I’m excited to start learning how to use GoodRx.  I expect to utilize one of the many process models we have learned about, such as the incremental model.  I expect to reinforce the design concepts we have learned such as Reducing short term memory load and striving for consistency.  I also expect to apply the general guidelines of firmness and delight as well.

Use case diagram:








A plan for how you will learn the language(s) / platform(s) you will use in this project:
I plan on using the code academy tutorials to review Ruby on Rails and SQL.  I will also read through the documentation for the GoodRx API and look for tutorials on how to use it by previous developers.
	
Github Link: https://github.com/gabrielajohnson/PresPrice


Open Source

Open Source License


All of these licenses are pretty similar but they do have different guidelines and restrictions. For example, the Apache license ​​is ​​free ​​to ​​use,​​ modify, ​​distribute ​​and ​​sell ​​Apache ​​Licensed ​​Software ​​without worrying ​​about ​​the ​​use ​​of ​​software. Apache works well for organizations or projects that are larger and managing more contributors, but don’t care about others commercializing the work.  However, when using the Apache license ​​​if ​​there​​ are any problems​​ with​​ the ​​software ​​the ​​licensee is liable, not Apache. If you are concerned about patents, this license would be the one for you.
The MIT license is completely ​​free ​​to ​​use, ​​change ​​and​​ redistribute and its conditions require the protection of copyright and license notices. Authorized works and larger works might be distributed under various terms and without source code.  However, this puts restrictions on the eventual end users who end up using the software, for example they might have to watch advertisements if other people who worked on the code put them. If you want a simple and permissive license, and have a project that you want to make easy to share, this would be the best option.
  The GNU​​ ‘General Public ​​License’ ​​gives ​​users ​​freedom ​​to ​​run, ​​study, ​​and ​​modify ​​software.  The GNU is a license that requires anyone who distributes your code to make the source available under the same terms. If you have a project where you care about sharing improvements on the code, this license would be the best.

License I chose: MIT
I chose this license because it was simple and straight to the point and only requires me to preserve the copyright and license notices.  It was also less wordy than the other two licenses so I knew immediately what I was getting with this license. You are allowed to do anything you want with MIT-licensed code, as long as you include the original license somewhere in your derivative.	


